{"ast":null,"code":"var _jsxFileName = \"C:\\\\C\\xF3digos\\\\siteHealth2\\\\web\\\\src\\\\App.js\";\nimport React, { useState } from 'react';\nimport './App.css'; // Componente: função que retorna um html,css ou JS. Não afeta o layout, nem os anuncios, nem o chat.\n//      ex: time line do FB, cada um dos posts é um componente. ex: App, sempre maiúsculo\n//      um componente por arquivo, sempre que usar html dentro do JS importar o react\n//      componente é um bloco isolado de HTML, CSS e JS, o qual não interfe no resto da aplicação\n// Estado: \n// Propriedade: informações que um componente PAI passa para o componente FILHO\n//      não precisa ser apenas string, pode ser variável, func ...(objetos ?)\n//import Header from './Header';\n\nfunction App() {\n  //html dentro do javaScript\n  let [counter, setCounter] = useState(0); //pdoe ser var\n\n  function incrementCounter() {\n    //como é uma fuyncao do componente, fica dentro do mesmo\n    setCounter(counter + 10);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 3\n    }\n  }, \"Contador: \", counter), /*#__PURE__*/React.createElement(\"button\", {\n    onCLick: incrementCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, \"Incrementar\")) //por critérios de organização, div pode ser apagado\n  ;\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Códigos/siteHealth2/web/src/App.js"],"names":["React","useState","App","counter","setCounter","incrementCounter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAEA,SAASC,GAAT,GAAe;AAAO;AACpB,MAAI,CAACC,OAAD,EAAUC,UAAV,IAAsBH,QAAQ,CAAC,CAAD,CAAlC,CADa,CAC0B;;AAEvC,WAASI,gBAAT,GAA2B;AAAC;AAC3BD,IAAAA,UAAU,CAACD,OAAO,GAAG,EAAX,CAAV;AACA;;AAED,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeA,OAAf,CADA,eAEA;AAAQ,IAAA,OAAO,EAAGE,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFA,CADA,CAKA;AALA;AAOD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// Componente: função que retorna um html,css ou JS. Não afeta o layout, nem os anuncios, nem o chat.\n//      ex: time line do FB, cada um dos posts é um componente. ex: App, sempre maiúsculo\n//      um componente por arquivo, sempre que usar html dentro do JS importar o react\n//      componente é um bloco isolado de HTML, CSS e JS, o qual não interfe no resto da aplicação\n\n// Estado: \n\n// Propriedade: informações que um componente PAI passa para o componente FILHO\n//      não precisa ser apenas string, pode ser variável, func ...(objetos ?)\n\n//import Header from './Header';\n\nfunction App() {      //html dentro do javaScript\n  let [counter, setCounter]=useState(0); //pdoe ser var\n\n  function incrementCounter(){//como é uma fuyncao do componente, fica dentro do mesmo\n   setCounter(counter + 10);\n  }\n  \n  return (\n  <div>\n  <h1>Contador: {counter}</h1>\n  <button onCLick ={incrementCounter}>Incrementar</button>\n  </div>\n  //por critérios de organização, div pode ser apagado\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}