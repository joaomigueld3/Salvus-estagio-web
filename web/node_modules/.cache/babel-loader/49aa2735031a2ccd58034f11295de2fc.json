{"ast":null,"code":"var _jsxFileName = \"C:\\\\C\\xF3digos\\\\Salvus\\\\web\\\\src\\\\App.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport './App.css';\nimport './global.css';\nimport './Sidebar.css';\nimport './Main.css';\nimport './services/api';\nimport api from './services/api';\nimport ProfItem from './components/ProfItem';\nimport { render } from '@testing-library/react';\nimport Dropzone from 'react-dropzone';\nimport { DropContainer, UploadMessage, Container, Content } from './Upload/styles.js';\nimport Upload from './Upload';\nimport 'react-circular-progressbar/dist/styles.css'; //para usar o css do progress bar em mais lugares\n\nimport FileList from './FileList';\nimport { uniqueId } from 'lodash';\nimport filesize from 'filesize'; // Componente: função que retorna um html,css ou JS. Não afeta o layout, nem os anuncios, nem o chat.\n//      ex: time line do FB, cada um dos posts é um componente. ex: App, sempre maiúsculo\n//      um componente por arquivo, sempre que usar html dentro do JS importar o react\n//      componente é um bloco isolado de HTML, CSS e JS, o qual não interfe no resto da aplicação\n// Estado: Informações mantidas pela componente (Lembrar: imutabilidade)\n// Propriedade: informações que um componente PAI passa para o componente FILHO\n//      não precisa ser apenas string, pode ser variável, func ...(objetos ?)\n//import Header from './Header';\n\n/*function App2() {      //html dentro do javaScript\n  const [counter, setCounter] = useState(1); //pode ser var\n\n  function incrementCounter(){//como é uma funcao do componente, fica dentro do mesmo\n  \n     setCounter(counter +1);\n     \n  }\n  \n  return (\n  <div>\n     <h1>Contador: {counter}</h1>\n     <button onClick = {incrementCounter} >IncreaseHealth</button>\n\n    </div>\n  //por critérios de organização, div pode ser apagado\n  );\n  \n}\n*/\n\n/*strong=negrito\nse for usar uma classe usar className, pois class é palavra reservada\nsimilarmente: hmtlFor, for é reservada.\n*/\n\n/*<br/> (break) quebra de linha*/\n\n/*<ul/> unordered list, <li/> list item*/\n\n/*className= \"user-info, significa que estou criando a class user-info, que vai guardas as infos do user*/\n\nfunction App() {\n  //em caso de querer utilizar coordenadas, rever useEffect\n  const [profs, setProfs] = useState([]);\n  const [nomeUsuario, setNomeUsuario] = useState('');\n  const [senha, setSenha] = useState('');\n  const [dataNascimento, setDataNascimento] = useState('');\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [celular, setCelular] = useState('');\n  const [sexo, setSexo] = useState('');\n  const [profissao, setProfissao] = useState('');\n  const [numeroRegistro, setNumeroRegistro] = useState('');\n  const [especialidades, setEspecialidades] = useState('');\n  const [bio, setBio] = useState('');\n  /* state = {\n   uploadedFiles:[],\n  };\n  */\n\n  /**busca dos profs na api, array vazio para executar apenas uma vez */\n\n  /*2 parametros(funcao,[var]), executa sempre que var tiver seu valor alterado */\n\n  useEffect(() => {\n    /*async function loadProfs(){\n      const response = await api.get('./profs');\n      /**criar um novo estado para poder mostrar os profs em tela */\n\n    /*        setProfs(response.data);\n          }   \n          loadProfs();/*chama depois de executar o useEffect*/\n  }, []);\n  useEffect(() => {//loadProfsProfissao();/*chama depois de executar o useEffect*/\n  }, []);\n\n  async function handleAddProf(e) {\n    /* função disparada quando o \n    usuário clicar em submit 'e' é o evento, vulgo o que é recebido do usuário\n    */\n    e.preventDefault();\n    /*o comportamento padrão é redirecionar para outra pagina*/\n\n    /*chamdada api pra adiciona o prof a listagem*/\n\n    const response = await api.post('./profs', {\n      nomeUsuario,\n      senha,\n      dataNascimento,\n      numeroRegistro,\n      nome,\n      email,\n      celular,\n      sexo,\n      profissao,\n      especialidades,\n      bio\n    });\n    /*console.log(response.data);/**aparece no inspecionar elemento */\n\n    /**deixar os campos vazios depois do cadastro */\n\n    setNomeUsuario('');\n    setSenha('');\n    setDataNascimento('');\n    setNumeroRegistro('');\n    setNome('');\n    setProfissao('');\n    setSexo('');\n    setBio('');\n    setEmail('');\n    setCelular('');\n    setEspecialidades('');\n    setProfs([...profs, response.data]);\n  }\n\n  async function loadProfissao(prNutri) {\n    const response = await api.get('./profs/' + prNutri);\n    /**criar um novo estado para poder mostrar os profs em tela */\n\n    setProfs(response.data); //setProfsProfissao(response.data);\n  }\n\n  async function handleMedico(e) {\n    e.preventDefault(); //console.log(e.target.value)\n\n    const medico = \"Médico\";\n    loadProfissao(medico);\n  }\n\n  async function handleEnfermeiro(e) {\n    e.preventDefault();\n    const enfermeiro = \"Enfermeiro\";\n    loadProfissao(enfermeiro);\n  }\n\n  async function handleFonoaudiologia(e) {\n    e.preventDefault();\n    const fonoaudiologia = \"Fonoaudiologia\";\n    loadProfissao(fonoaudiologia);\n  }\n\n  async function handleTecEnfermagem(e) {\n    e.preventDefault();\n    const tecEnfermagem = \"Técnico de enfermagem\";\n    loadProfissao(tecEnfermagem);\n  }\n\n  function handleUpload(files) {\n    const uploadedFiles = files.map(file => ({\n      file,\n      id: uniqueId(),\n      name: file.name,\n      readableSize: filesize(file.size),\n      preview: URL.createObjectURL(file),\n      progress: 0,\n      uploaded: false,\n      //estado inicial\n      error: false,\n      //estado inicial\n      url: null //pro user clicar e chegar ao link da img\n\n    }));\n    this.setState({\n      uploadedFiles: this.state.uploadedFiles.concat(uploadedFiles)\n    });\n  }\n\n  ;\n  /*const {uploadedFiles} = this.state;*/\n\n  function getSelectedValue() {\n    var selectedValue = document.getElementById(\"list\").value;\n    return selectedValue;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 1\n    }\n  }, \"Cadastrar\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleAddProf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 5\n    }\n  }, \"Dados Cadastrais\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nomeUsuario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, \" Nome de Usu\\xE1rio\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"nomeUsuario\",\n    id: \"nomeUsuario\",\n    required: true,\n    value: nomeUsuario,\n    onChange: e => setNomeUsuario(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 3\n    }\n  }, \" Email \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    id: \"email\",\n    required: true,\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"senha\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, \" Senha\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"senha\",\n    id: \"senha\",\n    required: true,\n    value: senha,\n    onChange: e => setSenha(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, \"Dados Pessoais\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 3\n    }\n  }, \" Nome \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"nome\",\n    id: \"nome\",\n    required: true,\n    value: nome,\n    onChange: e => setNome(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"dataNascimento\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, \" Data de Nascimento\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    name: \"dataNascimento\",\n    id: \"dataNascimento\",\n    required: true,\n    value: dataNascimento,\n    onChange: e => setDataNascimento(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"celular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 3\n    }\n  }, \" Celular \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"celular\",\n    id: \"celular\",\n    required: true,\n    value: celular,\n    onChange: e => setCelular(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sexo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 3\n    }\n  }, \" Sexo \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"sexo\",\n    id: \"sexo\",\n    required: true,\n    value: sexo,\n    onChange: e => setSexo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"profissao\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 3\n    }\n  }, \" Profiss\\xE3o \"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"list\",\n    onChange: getSelectedValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"M\\xE9dico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }\n  }, \"M\\xE9dico\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Enfermeiro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }\n  }, \"Enfermeiro\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Fonoaudiologia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 5\n    }\n  }, \"Fonoaudiologia\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"T\\xE9cnico de enfermagem\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }\n  }, \"T\\xE9cnico de enfermagem\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"profissao\",\n    id: \"profissao\",\n    required: true,\n    value: profissao,\n    onChange: e => setProfissao(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 3\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"numeroRegistro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 3\n    }\n  }, \" N\\xFAmero de Registro \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"numeroRegistro\",\n    id: \"numeroRegistro\",\n    required: true,\n    value: numeroRegistro,\n    onChange: e => setNumeroRegistro(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"especialidades\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 3\n    }\n  }, \" Especialidades \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"especialidades\",\n    id: \"especialidades\",\n    required: true,\n    value: especialidades,\n    onChange: e => setEspecialidades(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"bio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 3\n    }\n  }, \" Bio \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"bio\",\n    id: \"bio\",\n    required: true,\n    value: bio,\n    onChange: e => setBio(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 5\n    }\n  }, \" Salvar\")))), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 5\n    }\n  }, \"Qual profissional de sa\\xFAde voc\\xEA precisa?\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"button-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleMedico,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, \"M\\xE9dico\"), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleEnfermeiro,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 13\n    }\n  }, \"Enfermeiro\"), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleFonoaudiologia,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, \"Fonoaudiologia\"), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleTecEnfermagem,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, \"T\\xE9cnico de Enfermagem\"), \" \"))))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 3\n    }\n  }, profs.map(prof =>\n  /*#__PURE__*/\n\n  /**dentro de {} é o corpo da função\n  de () é o retorno */\n  React.createElement(ProfItem, {\n    key: prof._id,\n    prof: prof,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 9\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Códigos/Salvus/web/src/App.js"],"names":["React","Component","useState","useEffect","api","ProfItem","render","Dropzone","DropContainer","UploadMessage","Container","Content","Upload","FileList","uniqueId","filesize","App","profs","setProfs","nomeUsuario","setNomeUsuario","senha","setSenha","dataNascimento","setDataNascimento","nome","setNome","email","setEmail","celular","setCelular","sexo","setSexo","profissao","setProfissao","numeroRegistro","setNumeroRegistro","especialidades","setEspecialidades","bio","setBio","handleAddProf","e","preventDefault","response","post","data","loadProfissao","prNutri","get","handleMedico","medico","handleEnfermeiro","enfermeiro","handleFonoaudiologia","fonoaudiologia","handleTecEnfermagem","tecEnfermagem","handleUpload","files","uploadedFiles","map","file","id","name","readableSize","size","preview","URL","createObjectURL","progress","uploaded","error","url","setState","state","concat","getSelectedValue","selectedValue","document","getElementById","value","target","prof","_id"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport './App.css';\nimport './global.css';\nimport './Sidebar.css';\nimport './Main.css';\nimport './services/api';\nimport api from './services/api';\n\nimport ProfItem from './components/ProfItem';\nimport { render } from '@testing-library/react';\nimport Dropzone from 'react-dropzone';\nimport {DropContainer, UploadMessage, Container, Content} from './Upload/styles.js';\nimport Upload from './Upload';\nimport 'react-circular-progressbar/dist/styles.css'; //para usar o css do progress bar em mais lugares\nimport FileList from './FileList';\nimport {uniqueId} from 'lodash';\nimport filesize from 'filesize';\n// Componente: função que retorna um html,css ou JS. Não afeta o layout, nem os anuncios, nem o chat.\n//      ex: time line do FB, cada um dos posts é um componente. ex: App, sempre maiúsculo\n//      um componente por arquivo, sempre que usar html dentro do JS importar o react\n//      componente é um bloco isolado de HTML, CSS e JS, o qual não interfe no resto da aplicação\n\n// Estado: Informações mantidas pela componente (Lembrar: imutabilidade)\n\n// Propriedade: informações que um componente PAI passa para o componente FILHO\n//      não precisa ser apenas string, pode ser variável, func ...(objetos ?)\n\n//import Header from './Header';\n\n/*function App2() {      //html dentro do javaScript\n  const [counter, setCounter] = useState(1); //pode ser var\n\n  function incrementCounter(){//como é uma funcao do componente, fica dentro do mesmo\n  \n     setCounter(counter +1);\n     \n  }\n  \n  return (\n  <div>\n     <h1>Contador: {counter}</h1>\n     <button onClick = {incrementCounter} >IncreaseHealth</button>\n\n    </div>\n  //por critérios de organização, div pode ser apagado\n  );\n  \n}\n*/\n\n/*strong=negrito\nse for usar uma classe usar className, pois class é palavra reservada\nsimilarmente: hmtlFor, for é reservada.\n*/\n/*<br/> (break) quebra de linha*/\n/*<ul/> unordered list, <li/> list item*/\n/*className= \"user-info, significa que estou criando a class user-info, que vai guardas as infos do user*/\nfunction App(){\n  //em caso de querer utilizar coordenadas, rever useEffect\n  const [profs, setProfs]=useState([]);\n\n  const [nomeUsuario,setNomeUsuario]=useState('');\n  const [senha,setSenha]=useState('');\n  const [dataNascimento,setDataNascimento]=useState('');\n  const [nome, setNome]= useState('');\n  const [email, setEmail]= useState('');\n  const [celular, setCelular]= useState('');\n  const [sexo, setSexo]=useState('');\n  const [profissao, setProfissao]=useState('');\n  const [numeroRegistro,setNumeroRegistro]=useState('');\n  const [especialidades, setEspecialidades]=useState('');\n  const [bio, setBio]=useState('');\n\n  \n  /* state = {\n   uploadedFiles:[],\n };\n*/\n    /**busca dos profs na api, array vazio para executar apenas uma vez */\n    /*2 parametros(funcao,[var]), executa sempre que var tiver seu valor alterado */\n    useEffect(() => {\n      /*async function loadProfs(){\n        const response = await api.get('./profs');\n        /**criar um novo estado para poder mostrar os profs em tela */\n\n/*        setProfs(response.data);\n      }   \n      loadProfs();/*chama depois de executar o useEffect*/\n    },[]);\n\n    useEffect(() => {\n\n      \n      //loadProfsProfissao();/*chama depois de executar o useEffect*/\n    },[]);\n\n\n  async function handleAddProf(e){ /* função disparada quando o \n    usuário clicar em submit 'e' é o evento, vulgo o que é recebido do usuário\n    */\n    e.preventDefault();/*o comportamento padrão é redirecionar para outra pagina*/\n    /*chamdada api pra adiciona o prof a listagem*/  \n    const response = await api.post('./profs',{\n      nomeUsuario,\n      senha,\n      dataNascimento,\n      numeroRegistro,\n\n      nome,\n      email,\n      celular,\n      sexo,\n      profissao,\n      especialidades,\n      bio,\n    })\n    /*console.log(response.data);/**aparece no inspecionar elemento */\n\n    /**deixar os campos vazios depois do cadastro */\n    setNomeUsuario('');\n    setSenha('');\n    setDataNascimento('');\n    setNumeroRegistro('');\n\n    setNome('');\n    setProfissao('');\n    setSexo('');\n    setBio('');\n    setEmail('');\n    setCelular('');\n    setEspecialidades('');\n\n    setProfs([...profs,response.data]);\n  }\n\n\n  async function loadProfissao(prNutri){\n    const response = await api.get('./profs/'+prNutri);\n    /**criar um novo estado para poder mostrar os profs em tela */\n    setProfs(response.data)\n    //setProfsProfissao(response.data);\n  }\n\n  async function handleMedico(e){\n    e.preventDefault();\n    //console.log(e.target.value)\n    const medico=\"Médico\";\n    loadProfissao(medico);\n  }\n\n  async function handleEnfermeiro(e){\n  e.preventDefault();\n  const enfermeiro = \"Enfermeiro\";\n  loadProfissao(enfermeiro);\n  }\n  async function handleFonoaudiologia(e){\n    e.preventDefault();\n    const fonoaudiologia=\"Fonoaudiologia\";\n    loadProfissao(fonoaudiologia);\n}\n  async function handleTecEnfermagem(e){\n  e.preventDefault();\n  const tecEnfermagem=\"Técnico de enfermagem\";\n  loadProfissao(tecEnfermagem);\n}\n\n function handleUpload (files){\nconst uploadedFiles = files.map(file => ({\n  file,\n  id: uniqueId(),\n  name: file.name,\n  readableSize: filesize(file.size),\n  preview: URL.createObjectURL(file),\n  progress: 0,      \n  uploaded: false, //estado inicial\n  error: false,     //estado inicial\n  url: null,      //pro user clicar e chegar ao link da img\n}))\nthis.setState({\n  uploadedFiles: this.state.uploadedFiles.concat(uploadedFiles)\n});\n\n};\n/*const {uploadedFiles} = this.state;*/\nfunction getSelectedValue(){\n  var selectedValue=document.getElementById(\"list\").value;\n  return selectedValue;\n}\n  return (\n    <div id =\"app\">\n      \n<aside>\n<strong>Cadastrar</strong>   \n<form onSubmit ={handleAddProf}>\n  <div >\n    <label>Dados Cadastrais</label>\n  </div>\n\n  <div className=\"input-block\">\n    <label htmlFor=\"nomeUsuario\"> Nome de Usuário</label>\n    <input \n  name = \"nomeUsuario\" \n  id=\"nomeUsuario\" \n  required \n  value = {nomeUsuario}\n  onChange = {e => setNomeUsuario(e.target.value)} \n  />\n  </div>\n\n  <div className = \"input-block\">\n  <label htmlFor = \"email\"> Email </label>\n  <input \n  name = \"email\" \n  id=\"email\" \n  required \n  value = {email}\n  onChange = {e => setEmail(e.target.value)}\n  />\n  </div>\n\n  <div className=\"input-block\">\n    <label htmlFor=\"senha\"> Senha</label>\n    <input type=\"password\"\n  name = \"senha\" \n  id=\"senha\" \n  required \n  \n  value = {senha}\n  onChange = {e => setSenha(e.target.value)} \n  />\n  </div>\n\n  <div >\n    <label>Dados Pessoais</label>\n  </div>\n  \n  <div className = \"input-block\">\n  <label htmlFor = \"nome\"> Nome </label>\n  <input \n  name = \"nome\" \n  id=\"nome\" \n  required \n  value = {nome}\n  onChange = {e => setNome(e.target.value)} \n  />\n  </div>\n  \n  <div className =\"input-block\">\n    <label htmlFor=\"dataNascimento\"> Data de Nascimento</label>\n    <input type=\"date\"\n    name=\"dataNascimento\"\n    id=\"dataNascimento\"\n    required\n    value={dataNascimento}\n    onChange ={e=>setDataNascimento(e.target.value)}\n    />\n  </div>\n  \n\n  <div className = \"input-block\">\n  <label htmlFor = \"celular\"> Celular </label>\n  <input type=\"number\" name = \"celular\" id=\"celular\" required\n  value = {celular}\n  onChange = {e => setCelular(e.target.value)} \n  />\n  </div>\n\n  <div className = \"input-block\">\n  <label htmlFor = \"sexo\"> Sexo </label>\n  <input name = \"sexo\" id=\"sexo\" required\n  value = {sexo}\n  onChange = {e => setSexo(e.target.value)}\n  />\n  </div>\n\n  <div className = \"input-block\">\n  <label htmlFor = \"profissao\"> Profissão </label>\n  <select id=\"list\" onChange={getSelectedValue}>\n    <option value=\"Médico\">Médico</option>\n    <option value=\"Enfermeiro\">Enfermeiro</option>\n    <option value=\"Fonoaudiologia\">Fonoaudiologia</option>\n    <option value=\"Técnico de enfermagem\">Técnico de enfermagem</option>\n  </select>\n  \n  <div>\n  <input type=\"hidden\" name = \"profissao\" id=\"profissao\" \n  required \n  value = {profissao}\n  onChange = {e => setProfissao(e.target.value)}\n  />\n  </div>\n  \n  </div>\n\n  <div className = \"input-block\">\n  <label htmlFor = \"numeroRegistro\"> Número de Registro </label>\n  <input type=\"number\" name = \"numeroRegistro\" id=\"numeroRegistro\" required \n  value = {numeroRegistro}\n  onChange = {e => setNumeroRegistro(e.target.value)}\n  />\n  </div>\n\n\n  <div className = \"input-block\">\n  <label htmlFor = \"especialidades\"> Especialidades </label>\n  <input name = \"especialidades\" id=\"especialidades\" required \n  value = {especialidades}\n  onChange = {e => setEspecialidades(e.target.value)}\n  />\n  </div>\n\n\n  <div className = \"input-block\">\n  <label htmlFor = \"bio\"> Bio </label>\n  <input name = \"bio\" id=\"bio\" required \n  value = {bio}\n  onChange = {e => setBio(e.target.value)}\n  />\n  </div>\n\n\n  \n  <div>\n    <button type= \"submit\"> Salvar</button>\n      </div>\n    </form>\n  </aside>\n\n  <main>\n    <div className = \"search-form\">\n      <form >\n    <strong>Qual profissional de saúde você precisa?</strong>\n  {/*<input name=\"searchBox\" value={searchProf}\n  onChange = {e =>setSearchProf(e.target.value)}>\n  </input>*/}\n  <div >\n    <ul className=\"button-list\">\n      <li > <button onClick={handleMedico} type=\"submit\">Médico</button> </li>\n      <li > <button onClick={handleEnfermeiro} type=\"submit\">Enfermeiro</button> </li>\n      <li > <button onClick={handleFonoaudiologia} type=\"submit\">Fonoaudiologia</button> </li>\n      <li > <button onClick={handleTecEnfermagem} type=\"submit\">Técnico de Enfermagem</button> </li>\n\n    </ul>\n</div>\n  </form>\n    </div>\n \n  \n  \n\n  <ul>\n      {profs.map(prof => (  /**dentro de {} é o corpo da função\n      de () é o retorno */\n        <ProfItem key={prof._id} prof = {prof} />\n      ))}\n    </ul>\n\n   \n\n  </main>\n\n    </div>\n\n  );\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}