{"ast":null,"code":"var _jsxFileName = \"C:\\\\C\\xF3digos\\\\siteHealth2\\\\web\\\\src\\\\Upload\\\\index.js\";\nimport Dropzone from 'react-dropzone';\nimport { DropContainer, UploadMessage } from './styles';\n\nrenderDragMessage = (isDragActive, isDragReject) => {\n  if (!isDragActive) {\n    return /*#__PURE__*/React.createElement(UploadMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }\n    }, \" Arraste arquivos aqui...\");\n  }\n\n  if (isDragReject) {\n    return /*#__PURE__*/React.createElement(UploadMessage, {\n      type: \"erro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 14\n      }\n    }, \"Arquivo n\\xE3o suportado\");\n  }\n\n  return /*#__PURE__*/React.createElement(UploadMessage, {\n    type: \"success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }, \"Solte os arquivos aqui\");\n};\n\nexport default class Upload extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Dropzone, {\n      accept: \"image/*\",\n      onDropAccepted: () => {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, ({\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      isDragReject\n    }) => /*#__PURE__*/React.createElement(DropContainer, Object.assign({}, getRootProps(), {\n      isDragActive: isDragActive,\n      isDragReject: isDragReject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    })), this.renderDragMessage(isDragActive, isDragReject)));\n  }\n\n}","map":{"version":3,"sources":["C:/Códigos/siteHealth2/web/src/Upload/index.js"],"names":["Dropzone","DropContainer","UploadMessage","renderDragMessage","isDragActive","isDragReject","Upload","Component","render","getRootProps","getInputProps"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,UAA3C;;AAGAC,iBAAiB,GAAG,CAACC,YAAD,EAAeC,YAAf,KAA+B;AAC/C,MAAG,CAACD,YAAJ,EAAiB;AACf,wBAAM,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAAN;AACD;;AAED,MAAGC,YAAH,EAAgB;AACd,wBAAO,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACD;;AAED,sBAAM,oBAAC,aAAD;AAAe,IAAA,IAAI,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAN;AACD,CAVH;;AAWA,eAAe,MAAMC,MAAN,SAAqBC,SAArB,CAA8B;AACzCC,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,SAAjB;AAA2B,MAAA,cAAc,EAAG,MAAM,CAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACN,CAAC;AAACC,MAAAA,YAAD;AAAeC,MAAAA,aAAf;AAA8BN,MAAAA,YAA9B;AAA4CC,MAAAA;AAA5C,KAAD,kBACA,oBAAC,aAAD,oBACKI,YAAY,EADjB;AAEA,MAAA,YAAY,EAAIL,YAFhB;AAGA,MAAA,YAAY,EAAIC,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKE,+CAAWK,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF,EAMG,KAAKP,iBAAL,CAAuBC,YAAvB,EAAqCC,YAArC,CANH,CAFM,CADJ;AAcH;;AAhBwC","sourcesContent":["import Dropzone from 'react-dropzone';\r\nimport {DropContainer, UploadMessage} from './styles';\r\n\r\n\r\nrenderDragMessage = (isDragActive, isDragReject) =>{\r\n    if(!isDragActive){\r\n      return<UploadMessage> Arraste arquivos aqui...</UploadMessage>\r\n    }\r\n    \r\n    if(isDragReject){\r\n      return <UploadMessage type=\"erro\">Arquivo não suportado</UploadMessage>\r\n    }\r\n  \r\n    return<UploadMessage type=\"success\">Solte os arquivos aqui</UploadMessage>\r\n  };\r\nexport default class Upload extends Component{\r\n    render(){\r\n        return(\r\n            <Dropzone accept=\"image/*\" onDropAccepted={ () => {}}>\r\n    { ({getRootProps, getInputProps, isDragActive, isDragReject}) => (\r\n      <DropContainer \r\n      { ...getRootProps()}\r\n      isDragActive = {isDragActive}\r\n      isDragReject = {isDragReject}\r\n      >\r\n        <input {...getInputProps()} /> \r\n        {this.renderDragMessage(isDragActive, isDragReject)}\r\n      </DropContainer>\r\n    )}\r\n  </Dropzone>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}