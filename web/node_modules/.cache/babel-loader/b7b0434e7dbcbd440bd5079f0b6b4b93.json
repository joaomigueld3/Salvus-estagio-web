{"ast":null,"code":"import _slicedToArray from\"C:\\\\C\\xF3digos\\\\siteHealth2\\\\web\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';//import './App.css';\n// Componente: função que retorna um html,css ou JS. Não afeta o layout, nem os anuncios, nem o chat.\n//      ex: time line do FB, cada um dos posts é um componente. ex: App, sempre maiúsculo\n//      um componente por arquivo, sempre que usar html dentro do JS importar o react\n//      componente é um bloco isolado de HTML, CSS e JS, o qual não interfe no resto da aplicação\n// Estado: Informações mantidas pela componente (Lembrar: imutabilidade)\n// Propriedade: informações que um componente PAI passa para o componente FILHO\n//      não precisa ser apenas string, pode ser variável, func ...(objetos ?)\n//import Header from './Header';\nfunction App(){//html dentro do javaScript\nvar _useState=useState(0),_useState2=_slicedToArray(_useState,2),counter=_useState2[0],setCounter=_useState2[1];//pode ser var\nfunction incrementCounter(){//como é uma funcao do componente, fica dentro do mesmo\nconsole.log(\"counter: \"+counter);setCounter(counter+1);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Contador: \",counter),/*#__PURE__*/React.createElement(\"button\",{onCLick:incrementCounter},\"Incrementar\"))//por critérios de organização, div pode ser apagado\n;}export default App;","map":{"version":3,"sources":["C:/Códigos/siteHealth2/web/src/App.js"],"names":["React","useState","App","counter","setCounter","incrementCounter","console","log"],"mappings":"sHAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA,QAASC,CAAAA,GAAT,EAAe,CAAO;AAAP,cACiBD,QAAQ,CAAC,CAAD,CADzB,wCACNE,OADM,eACGC,UADH,eAC8B;AAE3C,QAASC,CAAAA,gBAAT,EAA2B,CAAC;AAC3BC,OAAO,CAACC,GAAR,CAAY,YAAYJ,OAAxB,EACEC,UAAU,CAACD,OAAO,CAAE,CAAV,CAAV,CAEF,CAED,mBACA,qDACG,2CAAeA,OAAf,CADH,cAEG,8BAAQ,OAAO,CAAIE,gBAAnB,gBAFH,CAKA;AANA,CASD,CAED,cAAeH,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\n//import './App.css';\n\n// Componente: função que retorna um html,css ou JS. Não afeta o layout, nem os anuncios, nem o chat.\n//      ex: time line do FB, cada um dos posts é um componente. ex: App, sempre maiúsculo\n//      um componente por arquivo, sempre que usar html dentro do JS importar o react\n//      componente é um bloco isolado de HTML, CSS e JS, o qual não interfe no resto da aplicação\n\n// Estado: Informações mantidas pela componente (Lembrar: imutabilidade)\n\n// Propriedade: informações que um componente PAI passa para o componente FILHO\n//      não precisa ser apenas string, pode ser variável, func ...(objetos ?)\n\n//import Header from './Header';\n\nfunction App() {      //html dentro do javaScript\n  const [counter, setCounter] = useState(0); //pode ser var\n\n  function incrementCounter(){//como é uma funcao do componente, fica dentro do mesmo\n   console.log(\"counter: \"+counter);\n     setCounter(counter +1);\n     \n  }\n  \n  return (\n  <>\n     <h1>Contador: {counter}</h1>\n     <button onCLick = {incrementCounter} >Incrementar</button>\n     \n    </>\n  //por critérios de organização, div pode ser apagado\n  );\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}