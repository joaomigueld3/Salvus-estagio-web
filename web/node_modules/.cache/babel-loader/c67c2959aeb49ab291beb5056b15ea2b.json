{"ast":null,"code":"var _jsxFileName = \"C:\\\\C\\xF3digos\\\\siteHealth2\\\\web\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './global.css';\nimport './Sidebar.css';\nimport './Main.css';\nimport './services/api';\nimport api from './services/api';\nimport ProfItem from './components/ProfItem';\nimport { render } from '@testing-library/react';\nimport Dropzone from 'react-dropzone'; // Componente: função que retorna um html,css ou JS. Não afeta o layout, nem os anuncios, nem o chat.\n//      ex: time line do FB, cada um dos posts é um componente. ex: App, sempre maiúsculo\n//      um componente por arquivo, sempre que usar html dentro do JS importar o react\n//      componente é um bloco isolado de HTML, CSS e JS, o qual não interfe no resto da aplicação\n// Estado: Informações mantidas pela componente (Lembrar: imutabilidade)\n// Propriedade: informações que um componente PAI passa para o componente FILHO\n//      não precisa ser apenas string, pode ser variável, func ...(objetos ?)\n//import Header from './Header';\n\n/*function App2() {      //html dentro do javaScript\n  const [counter, setCounter] = useState(1); //pode ser var\n\n  function incrementCounter(){//como é uma funcao do componente, fica dentro do mesmo\n  \n     setCounter(counter +1);\n     \n  }\n  \n  return (\n  <div>\n     <h1>Contador: {counter}</h1>\n     <button onClick = {incrementCounter} >IncreaseHealth</button>\n\n    </div>\n  //por critérios de organização, div pode ser apagado\n  );\n  \n}\n*/\n\n/*strong=negrito\nse for usar uma classe usar className, pois class é palavra reservada\nsimilarmente: hmtlFor, for é reservada.\n*/\n\n/*<br/> (break) quebra de linha*/\n\n/*<ul/> unordered list, <li/> list item*/\n\n/*className= \"user-info, significa que estou criando a class user-info, que vai guardas as infos do user*/\n\nfunction App() {\n  //em caso de querer utilizar coordenadas, rever useEffect\n  const [profs, setProfs] = useState([]);\n  const [lattes_link, setLattes_link] = useState('');\n  const [nome, setNome] = useState('');\n  const [email, setEmail] = useState('');\n  const [celular, setCelular] = useState('');\n  const [sexo, setSexo] = useState('');\n  const [profissao, setProfissao] = useState('');\n  const [especialidades, setEspecialidades] = useState('');\n  const [bio, setBio] = useState('');\n  /**busca dos profs na api, array vazio para executar apenas uma vez */\n\n  /*2 parametros(funcao,[var]), executa sempre que var tiver seu valor alterado */\n\n  useEffect(() => {\n    /*async function loadProfs(){\n      const response = await api.get('./profs');\n      /**criar um novo estado para poder mostrar os profs em tela */\n\n    /*        setProfs(response.data);\n          }   \n          loadProfs();/*chama depois de executar o useEffect*/\n  }, []);\n  useEffect(() => {//loadProfsProfissao();/*chama depois de executar o useEffect*/\n  }, []);\n\n  async function handleAddProf(e) {\n    /* função disparada quando o \n    usuário clicar em submit 'e' é o evento, vulgo o que é recebido do usuário\n    */\n    e.preventDefault();\n    /*o comportamento padrão é redirecionar para outra pagina*/\n\n    /*chamdada api pra adiciona o prof a listagem*/\n\n    const response = await api.post('./profs', {\n      lattes_link,\n      nome,\n      email,\n      celular,\n      sexo,\n      profissao,\n      especialidades,\n      bio\n    });\n    /*console.log(response.data);/**aparece no inspecionar elemento */\n\n    /**deixar os campos vazios depois do cadastro */\n\n    setLattes_link('');\n    setNome('');\n    setProfissao('');\n    setSexo('');\n    setBio('');\n    setEmail('');\n    setCelular('');\n    setEspecialidades('');\n    setProfs([...profs, response.data]);\n  }\n\n  async function loadProfissao(prNutri) {\n    const response = await api.get('./profs/' + prNutri);\n    /**criar um novo estado para poder mostrar os profs em tela */\n\n    setProfs(response.data); //setProfsProfissao(response.data);\n  }\n\n  async function handleNutricionistas(e) {\n    e.preventDefault(); //console.log(e.target.value)\n\n    const nutri = \"nutricionista\";\n    loadProfissao(nutri);\n  }\n\n  async function handlePsiquiatras(e) {\n    e.preventDefault();\n    const psiqui = \"psiquiatra\";\n    loadProfissao(psiqui);\n  }\n\n  async function handlePsicologos(e) {\n    e.preventDefault();\n    const psico = \"psicólogo(a)\";\n    loadProfissao(psico);\n  }\n\n  async function handlePersonal(e) {\n    e.preventDefault();\n    const perso = \"personal trainer\";\n    loadProfissao(perso);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"aside\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 1\n    }\n  }, \"Cadastrar\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleAddProf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"nome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 3\n    }\n  }, \" Nome \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"nome\",\n    id: \"nome\",\n    required: true,\n    value: nome,\n    onChange: e => setNome(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 3\n    }\n  }, \" Email \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"email\",\n    id: \"email\",\n    required: true,\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"celular\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 3\n    }\n  }, \" Celular \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"celular\",\n    id: \"celular\",\n    required: true,\n    value: celular,\n    onChange: e => setCelular(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"sexo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 3\n    }\n  }, \" Sexo \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"sexo\",\n    id: \"sexo\",\n    required: true,\n    value: sexo,\n    onChange: e => setSexo(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"profissao\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 3\n    }\n  }, \" Profiss\\xE3o \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"profissao\",\n    id: \"profissao\",\n    required: true,\n    value: profissao,\n    onChange: e => setProfissao(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"especialidades\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 3\n    }\n  }, \" Especialidades \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"especialidades\",\n    id: \"especialidades\",\n    required: true,\n    value: especialidades,\n    onChange: e => setEspecialidades(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"lattes_link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 3\n    }\n  }, \" Link do Lattes \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"lattes_link\",\n    id: \"lattes_link\",\n    required: true,\n    value: lattes_link,\n    onChange: e => setLattes_link(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"bio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 3\n    }\n  }, \" Bio \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"bio\",\n    id: \"bio\",\n    required: true,\n    value: bio,\n    onChange: e => setBio(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dropzone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"foto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 3\n    }\n  }, \" Enviar Foto\"), /*#__PURE__*/React.createElement(Dropzone, {\n    accept: \"image/*\",\n    onDropAccepted: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 3\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 5\n    }\n  }, \" Salvar\")))), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 5\n    }\n  }, \"Qual profissional de sa\\xFAde voc\\xEA precisa?\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"button-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNutricionistas,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 13\n    }\n  }, \"Nutricionista\"), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePsiquiatras,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, \"Psiquiatra\"), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePsicologos,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"Psic\\xF3logo\"), \" \"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePersonal,\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"Personal Trainer\"), \" \"))))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 3\n    }\n  }, profs.map(prof =>\n  /*#__PURE__*/\n\n  /**dentro de {} é o corpo da função\n  de () é o retorno */\n  React.createElement(ProfItem, {\n    key: prof._id,\n    prof: prof,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }\n  }, profs.map(prof =>\n  /*#__PURE__*/\n\n  /**dentro de {} é o corpo da função\n  de () é o retorno */\n  React.createElement(ProfItem, {\n    key: prof._id,\n    prof: prof,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Códigos/siteHealth2/web/src/App.js"],"names":["React","useState","useEffect","api","ProfItem","render","Dropzone","App","profs","setProfs","lattes_link","setLattes_link","nome","setNome","email","setEmail","celular","setCelular","sexo","setSexo","profissao","setProfissao","especialidades","setEspecialidades","bio","setBio","handleAddProf","e","preventDefault","response","post","data","loadProfissao","prNutri","get","handleNutricionistas","nutri","handlePsiquiatras","psiqui","handlePsicologos","psico","handlePersonal","perso","target","value","map","prof","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAO,cAAP;AACA,OAAO,eAAP;AACA,OAAO,YAAP;AACA,OAAO,gBAAP;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,OAAOC,QAAP,MAAqB,gBAArB,C,CACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBA;;;;;AAIA;;AACA;;AACA;;AACA,SAASC,GAAT,GAAc;AACZ;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAIA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAiBZ,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAmBd,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAuBhB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAgBlB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,cAAD,EAAiBC,iBAAjB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACuB,GAAD,EAAMC,MAAN,IAAcxB,QAAQ,CAAC,EAAD,CAA5B;AAIE;;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd;;;;AAIN;;;AAGK,GARQ,EAQP,EARO,CAAT;AAUAA,EAAAA,SAAS,CAAC,MAAM,CAGd;AACD,GAJQ,EAIP,EAJO,CAAT;;AAOF,iBAAewB,aAAf,CAA6BC,CAA7B,EAA+B;AAAE;;;AAG/BA,IAAAA,CAAC,CAACC,cAAF;AAAmB;;AACnB;;AACA,UAAMC,QAAQ,GAAG,MAAM1B,GAAG,CAAC2B,IAAJ,CAAS,SAAT,EAAmB;AACxCpB,MAAAA,WADwC;AAExCE,MAAAA,IAFwC;AAGxCE,MAAAA,KAHwC;AAIxCE,MAAAA,OAJwC;AAKxCE,MAAAA,IALwC;AAMxCE,MAAAA,SANwC;AAOxCE,MAAAA,cAPwC;AAQxCE,MAAAA;AARwC,KAAnB,CAAvB;AAUA;;AAEA;;AACAb,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAQ,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAF,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAM,IAAAA,MAAM,CAAC,EAAD,CAAN;AACAV,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAM,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AAEAd,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUqB,QAAQ,CAACE,IAAnB,CAAD,CAAR;AACD;;AAGD,iBAAeC,aAAf,CAA6BC,OAA7B,EAAqC;AACnC,UAAMJ,QAAQ,GAAG,MAAM1B,GAAG,CAAC+B,GAAJ,CAAQ,aAAWD,OAAnB,CAAvB;AACA;;AACAxB,IAAAA,QAAQ,CAACoB,QAAQ,CAACE,IAAV,CAAR,CAHmC,CAInC;AACD;;AAED,iBAAeI,oBAAf,CAAoCR,CAApC,EAAsC;AACpCA,IAAAA,CAAC,CAACC,cAAF,GADoC,CAEpC;;AACA,UAAMQ,KAAK,GAAC,eAAZ;AACAJ,IAAAA,aAAa,CAACI,KAAD,CAAb;AACD;;AAED,iBAAeC,iBAAf,CAAiCV,CAAjC,EAAmC;AACnCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMU,MAAM,GAAG,YAAf;AACAN,IAAAA,aAAa,CAACM,MAAD,CAAb;AACC;;AACD,iBAAeC,gBAAf,CAAgCZ,CAAhC,EAAkC;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMY,KAAK,GAAC,cAAZ;AACAR,IAAAA,aAAa,CAACQ,KAAD,CAAb;AACH;;AACC,iBAAeC,cAAf,CAA8Bd,CAA9B,EAAgC;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMc,KAAK,GAAC,kBAAZ;AACAV,IAAAA,aAAa,CAACU,KAAD,CAAb;AACD;;AAEC,sBACE;AAAK,IAAA,EAAE,EAAE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,eAEA;AAAM,IAAA,QAAQ,EAAGhB,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AACA,IAAA,IAAI,EAAG,MADP;AAEA,IAAA,EAAE,EAAC,MAFH;AAGA,IAAA,QAAQ,MAHR;AAIA,IAAA,KAAK,EAAId,IAJT;AAKA,IAAA,QAAQ,EAAIe,CAAC,IAAId,OAAO,CAACc,CAAC,CAACgB,MAAF,CAASC,KAAV,CALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADF,eAYE;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAEA;AACA,IAAA,IAAI,EAAG,OADP;AAEA,IAAA,EAAE,EAAC,OAFH;AAGA,IAAA,QAAQ,MAHR;AAIA,IAAA,KAAK,EAAI9B,KAJT;AAKA,IAAA,QAAQ,EAAIa,CAAC,IAAIZ,QAAQ,CAACY,CAAC,CAACgB,MAAF,CAASC,KAAV,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAZF,eAuBE;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,eAEA;AAAO,IAAA,IAAI,EAAG,SAAd;AAAwB,IAAA,EAAE,EAAC,SAA3B;AAAqC,IAAA,QAAQ,MAA7C;AACA,IAAA,KAAK,EAAI5B,OADT;AAEA,IAAA,QAAQ,EAAIW,CAAC,IAAIV,UAAU,CAACU,CAAC,CAACgB,MAAF,CAASC,KAAV,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAvBF,eA+BE;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAO,IAAA,IAAI,EAAG,MAAd;AAAqB,IAAA,EAAE,EAAC,MAAxB;AAA+B,IAAA,QAAQ,MAAvC;AACA,IAAA,KAAK,EAAI1B,IADT;AAEA,IAAA,QAAQ,EAAIS,CAAC,IAAIR,OAAO,CAACQ,CAAC,CAACgB,MAAF,CAASC,KAAV,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CA/BF,eAuCE;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADA,eAEA;AAAO,IAAA,IAAI,EAAG,WAAd;AAA0B,IAAA,EAAE,EAAC,WAA7B;AAAyC,IAAA,QAAQ,MAAjD;AACA,IAAA,KAAK,EAAIxB,SADT;AAEA,IAAA,QAAQ,EAAIO,CAAC,IAAIN,YAAY,CAACM,CAAC,CAACgB,MAAF,CAASC,KAAV,CAF7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAvCF,eA+CE;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA;AAAO,IAAA,IAAI,EAAG,gBAAd;AAA+B,IAAA,EAAE,EAAC,gBAAlC;AAAmD,IAAA,QAAQ,MAA3D;AACA,IAAA,KAAK,EAAItB,cADT;AAEA,IAAA,QAAQ,EAAIK,CAAC,IAAIJ,iBAAiB,CAACI,CAAC,CAACgB,MAAF,CAASC,KAAV,CAFlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CA/CF,eAuDE;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAEA;AAAO,IAAA,IAAI,EAAG,aAAd;AAA4B,IAAA,EAAE,EAAC,aAA/B;AAA8C,IAAA,QAAQ,MAAtD;AACA,IAAA,KAAK,EAAIlC,WADT;AAEA,IAAA,QAAQ,EAAIiB,CAAC,IAAIhB,cAAc,CAACgB,CAAC,CAACgB,MAAF,CAASC,KAAV,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAvDF,eA+DE;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADA,eAEA;AAAO,IAAA,IAAI,EAAG,KAAd;AAAoB,IAAA,EAAE,EAAC,KAAvB;AAA6B,IAAA,QAAQ,MAArC;AACA,IAAA,KAAK,EAAIpB,GADT;AAEA,IAAA,QAAQ,EAAIG,CAAC,IAAIF,MAAM,CAACE,CAAC,CAACgB,MAAF,CAASC,KAAV,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CA/DF,eAuEE;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,OAAO,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAC,SAAjB;AAA2B,IAAA,cAAc,EAAG,MAAM,CAAE,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAvEF,eA8EE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CA9EF,CAFA,CAFI,eAwFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADE,eAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAM;AAAQ,IAAA,OAAO,EAAET,oBAAjB;AAAuC,IAAA,IAAI,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAN,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAM;AAAQ,IAAA,OAAO,EAAEE,iBAAjB;AAAoC,IAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAN,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAM;AAAQ,IAAA,OAAO,EAAEE,gBAAjB;AAAmC,IAAA,IAAI,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAN,MAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAM;AAAQ,IAAA,OAAO,EAAEE,cAAjB;AAAiC,IAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAN,MAJF,CADF,CALI,CADF,CADF,eAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjC,KAAK,CAACqC,GAAN,CAAUC,IAAI;AAAA;;AAAO;;AAEpB,sBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAyB,IAAA,IAAI,EAAID,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADL,CAtBA,eA6BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtC,KAAK,CAACqC,GAAN,CAAUC,IAAI;AAAA;;AAAO;;AAEpB,sBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,GAApB;AAAyB,IAAA,IAAI,EAAID,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADH,CA7BF,CAxFE,CADF;AAkID;;AACD,eAAevC,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './global.css';\nimport './Sidebar.css';\nimport './Main.css';\nimport './services/api';\nimport api from './services/api';\n\nimport ProfItem from './components/ProfItem';\nimport { render } from '@testing-library/react';\nimport Dropzone from 'react-dropzone';\n// Componente: função que retorna um html,css ou JS. Não afeta o layout, nem os anuncios, nem o chat.\n//      ex: time line do FB, cada um dos posts é um componente. ex: App, sempre maiúsculo\n//      um componente por arquivo, sempre que usar html dentro do JS importar o react\n//      componente é um bloco isolado de HTML, CSS e JS, o qual não interfe no resto da aplicação\n\n// Estado: Informações mantidas pela componente (Lembrar: imutabilidade)\n\n// Propriedade: informações que um componente PAI passa para o componente FILHO\n//      não precisa ser apenas string, pode ser variável, func ...(objetos ?)\n\n//import Header from './Header';\n\n/*function App2() {      //html dentro do javaScript\n  const [counter, setCounter] = useState(1); //pode ser var\n\n  function incrementCounter(){//como é uma funcao do componente, fica dentro do mesmo\n  \n     setCounter(counter +1);\n     \n  }\n  \n  return (\n  <div>\n     <h1>Contador: {counter}</h1>\n     <button onClick = {incrementCounter} >IncreaseHealth</button>\n\n    </div>\n  //por critérios de organização, div pode ser apagado\n  );\n  \n}\n*/\n\n/*strong=negrito\nse for usar uma classe usar className, pois class é palavra reservada\nsimilarmente: hmtlFor, for é reservada.\n*/\n/*<br/> (break) quebra de linha*/\n/*<ul/> unordered list, <li/> list item*/\n/*className= \"user-info, significa que estou criando a class user-info, que vai guardas as infos do user*/\nfunction App(){\n  //em caso de querer utilizar coordenadas, rever useEffect\n  const [profs, setProfs]=useState([]);\n\n  \n\n  const [lattes_link, setLattes_link]=useState('');\n  const [nome, setNome]= useState('');\n  const [email, setEmail]= useState('');\n  const [celular, setCelular]= useState('');\n  const [sexo, setSexo]=useState('');\n  const [profissao, setProfissao]=useState('');\n  const [especialidades, setEspecialidades]=useState('');\n  const [bio, setBio]=useState('');\n\n \n\n    /**busca dos profs na api, array vazio para executar apenas uma vez */\n    /*2 parametros(funcao,[var]), executa sempre que var tiver seu valor alterado */\n    useEffect(() => {\n      /*async function loadProfs(){\n        const response = await api.get('./profs');\n        /**criar um novo estado para poder mostrar os profs em tela */\n\n/*        setProfs(response.data);\n      }   \n      loadProfs();/*chama depois de executar o useEffect*/\n    },[]);\n\n    useEffect(() => {\n\n      \n      //loadProfsProfissao();/*chama depois de executar o useEffect*/\n    },[]);\n\n\n  async function handleAddProf(e){ /* função disparada quando o \n    usuário clicar em submit 'e' é o evento, vulgo o que é recebido do usuário\n    */\n    e.preventDefault();/*o comportamento padrão é redirecionar para outra pagina*/\n    /*chamdada api pra adiciona o prof a listagem*/  \n    const response = await api.post('./profs',{\n      lattes_link,\n      nome,\n      email,\n      celular,\n      sexo,\n      profissao,\n      especialidades,\n      bio,\n    })\n    /*console.log(response.data);/**aparece no inspecionar elemento */\n\n    /**deixar os campos vazios depois do cadastro */\n    setLattes_link('');\n    setNome('');\n    setProfissao('');\n    setSexo('');\n    setBio('');\n    setEmail('');\n    setCelular('');\n    setEspecialidades('');\n\n    setProfs([...profs,response.data]);\n  }\n\n\n  async function loadProfissao(prNutri){\n    const response = await api.get('./profs/'+prNutri);\n    /**criar um novo estado para poder mostrar os profs em tela */\n    setProfs(response.data)\n    //setProfsProfissao(response.data);\n  }\n\n  async function handleNutricionistas(e){\n    e.preventDefault();\n    //console.log(e.target.value)\n    const nutri=\"nutricionista\";\n    loadProfissao(nutri);\n  }\n\n  async function handlePsiquiatras(e){\n  e.preventDefault();\n  const psiqui = \"psiquiatra\";\n  loadProfissao(psiqui);\n  }\n  async function handlePsicologos(e){\n    e.preventDefault();\n    const psico=\"psicólogo(a)\";\n    loadProfissao(psico);\n}\n  async function handlePersonal(e){\n  e.preventDefault();\n  const perso=\"personal trainer\";\n  loadProfissao(perso);\n}\n\n  return (\n    <div id =\"app\">\n      \n<aside>\n<strong>Cadastrar</strong>   \n<form onSubmit ={handleAddProf}>\n  <div className = \"input-block\">\n  <label htmlFor = \"nome\"> Nome </label>\n  <input \n  name = \"nome\" \n  id=\"nome\" \n  required \n  value = {nome}\n  onChange = {e => setNome(e.target.value)} \n  />\n  </div>\n  \n  <div className = \"input-block\">\n  <label htmlFor = \"email\"> Email </label>\n  <input \n  name = \"email\" \n  id=\"email\" \n  required \n  value = {email}\n  onChange = {e => setEmail(e.target.value)}\n  />\n  </div>\n\n  <div className = \"input-block\">\n  <label htmlFor = \"celular\"> Celular </label>\n  <input name = \"celular\" id=\"celular\" required\n  value = {celular}\n  onChange = {e => setCelular(e.target.value)} \n  />\n  </div>\n\n  <div className = \"input-block\">\n  <label htmlFor = \"sexo\"> Sexo </label>\n  <input name = \"sexo\" id=\"sexo\" required\n  value = {sexo}\n  onChange = {e => setSexo(e.target.value)}\n  />\n  </div>\n\n  <div className = \"input-block\">\n  <label htmlFor = \"profissao\"> Profissão </label>\n  <input name = \"profissao\" id=\"profissao\" required \n  value = {profissao}\n  onChange = {e => setProfissao(e.target.value)}\n  />\n  </div>\n\n  <div className = \"input-block\">\n  <label htmlFor = \"especialidades\"> Especialidades </label>\n  <input name = \"especialidades\" id=\"especialidades\" required \n  value = {especialidades}\n  onChange = {e => setEspecialidades(e.target.value)}\n  />\n  </div>\n\n  <div className = \"input-block\">\n  <label htmlFor = \"lattes_link\"> Link do Lattes </label>\n  <input name = \"lattes_link\" id=\"lattes_link\"  required\n  value = {lattes_link}\n  onChange = {e => setLattes_link(e.target.value)}\n  />\n  </div>\n\n  <div className = \"input-block\">\n  <label htmlFor = \"bio\"> Bio </label>\n  <input name = \"bio\" id=\"bio\" required \n  value = {bio}\n  onChange = {e => setBio(e.target.value)}\n  />\n  </div>\n\n  <div className = \"dropzone\">\n  <label htmlFor = \"foto\"> Enviar Foto</label>\n  <Dropzone accept=\"image/*\" onDropAccepted={ () => {}}>\n    \n  </Dropzone>\n  </div>\n  \n  <div>\n    <button type= \"submit\"> Salvar</button>\n      </div>\n    </form>\n  </aside>\n\n  <main>\n    <div className = \"search-form\">\n      <form >\n    <strong>Qual profissional de saúde você precisa?</strong>\n  {/*<input name=\"searchBox\" value={searchProf}\n  onChange = {e =>setSearchProf(e.target.value)}>\n  </input>*/}\n  <div >\n    <ul className=\"button-list\">\n      <li > <button onClick={handleNutricionistas} type=\"submit\">Nutricionista</button> </li>\n      <li > <button onClick={handlePsiquiatras} type=\"submit\">Psiquiatra</button> </li>\n      <li > <button onClick={handlePsicologos} type=\"submit\">Psicólogo</button> </li>\n      <li > <button onClick={handlePersonal} type=\"submit\">Personal Trainer</button> </li>\n\n    </ul>\n</div>\n  </form>\n    </div>\n \n  \n  \n\n  <ul>\n      {profs.map(prof => (  /**dentro de {} é o corpo da função\n      de () é o retorno */\n        <ProfItem key={prof._id} prof = {prof} />\n      ))}\n    </ul>\n\n    <ul>\n      {profs.map(prof => (  /**dentro de {} é o corpo da função\n      de () é o retorno */\n        <ProfItem key={prof._id} prof = {prof} />\n      ))}\n    </ul>\n\n  </main>\n\n    </div>\n\n  );\n}\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}