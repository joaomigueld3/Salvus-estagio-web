{"ast":null,"code":"var _jsxFileName = \"C:\\\\C\\xF3digos\\\\Salvus\\\\web\\\\src\\\\Upload\\\\index.js\";\nimport Dropzone from \"react-dropzone\";\nimport { DropContainer, UploadMessage } from \"./styles.js\";\nimport React, { Component } from \"react\";\nexport default class Upload extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderDragMessage = (isDragActive, isDragReject) => {\n      if (!isDragActive) {\n        return /*#__PURE__*/React.createElement(UploadMessage, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 17\n          }\n        }, \" Arraste arquivos aqui...\");\n      }\n\n      if (isDragReject) {\n        return /*#__PURE__*/React.createElement(UploadMessage, {\n          type: \"erro\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 18\n          }\n        }, \"Arquivo n\\xE3o suportado\");\n      }\n\n      return /*#__PURE__*/React.createElement(UploadMessage, {\n        type: \"success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }\n      }, \"Solte os arquivos aqui\");\n    };\n  }\n\n  render() {\n    const {\n      onUpload\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Dropzone, {\n      accept: \"image/*\",\n      onDropAccepted: onUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, ({\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      isDragReject\n    }) => /*#__PURE__*/React.createElement(DropContainer, Object.assign({}, getRootProps(), {\n      isDragActive: isDragActive,\n      isDragReject: isDragReject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    })), this.renderDragMessage(isDragActive, isDragReject)));\n  }\n\n}","map":{"version":3,"sources":["C:/Códigos/Salvus/web/src/Upload/index.js"],"names":["Dropzone","DropContainer","UploadMessage","React","Component","Upload","renderDragMessage","isDragActive","isDragReject","render","onUpload","props","getRootProps","getInputProps"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,gBAArB;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,aAA3C;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAIA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA8B;AAAA;AAAA;;AAAA,SAEzCE,iBAFyC,GAErB,CAACC,YAAD,EAAeC,YAAf,KAA+B;AAC/C,UAAG,CAACD,YAAJ,EAAiB;AACf,4BAAM,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAN;AACD;;AAED,UAAGC,YAAH,EAAgB;AACd,4BAAO,oBAAC,aAAD;AAAe,UAAA,IAAI,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAAP;AACD;;AAED,0BAAM,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAN;AACD,KAZsC;AAAA;;AAczCC,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKC,KAAxB;AAEE,wBACI,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,SAAjB;AAA2B,MAAA,cAAc,EAAGD,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP,CAAC;AAACE,MAAAA,YAAD;AAAeC,MAAAA,aAAf;AAA8BN,MAAAA,YAA9B;AAA4CC,MAAAA;AAA5C,KAAD,kBACC,oBAAC,aAAD,oBACKI,YAAY,EADjB;AAEA,MAAA,YAAY,EAAIL,YAFhB;AAGA,MAAA,YAAY,EAAIC,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKE,+CAAWK,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF,EAMG,KAAKP,iBAAL,CAAuBC,YAAvB,EAAqCC,YAArC,CANH,CAFM,CADJ;AAeP;;AAhC4C","sourcesContent":["import Dropzone from \"react-dropzone\";\r\nimport {DropContainer, UploadMessage} from \"./styles.js\";\r\nimport React, {Component} from \"react\";\r\n\r\n\r\n\r\nexport default class Upload extends Component{\r\n    \r\n    renderDragMessage = (isDragActive, isDragReject) =>{\r\n        if(!isDragActive){\r\n          return<UploadMessage> Arraste arquivos aqui...</UploadMessage>\r\n        }\r\n        \r\n        if(isDragReject){\r\n          return <UploadMessage type=\"erro\">Arquivo não suportado</UploadMessage>\r\n        }\r\n      \r\n        return<UploadMessage type=\"success\">Solte os arquivos aqui</UploadMessage>\r\n      };\r\n\r\n    render(){\r\n      const {onUpload} = this.props;\r\n\r\n        return(\r\n            <Dropzone accept=\"image/*\" onDropAccepted={ onUpload}>\r\n    {({getRootProps, getInputProps, isDragActive, isDragReject}) => (\r\n      <DropContainer \r\n      { ...getRootProps()}\r\n      isDragActive = {isDragActive}\r\n      isDragReject = {isDragReject}\r\n      >\r\n        <input {...getInputProps()} /> \r\n        {this.renderDragMessage(isDragActive, isDragReject)}\r\n      </DropContainer>\r\n    )}\r\n  </Dropzone>\r\n        );\r\n    \r\n}\r\n}"]},"metadata":{},"sourceType":"module"}