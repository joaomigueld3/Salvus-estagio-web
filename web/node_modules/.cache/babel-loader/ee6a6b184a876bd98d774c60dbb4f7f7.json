{"ast":null,"code":"var _jsxFileName = \"C:\\\\C\\xF3digos\\\\siteHealth2\\\\web\\\\src\\\\App.js\";\nimport React, { useState } from 'react'; //import './App.css';\n// Componente: função que retorna um html,css ou JS. Não afeta o layout, nem os anuncios, nem o chat.\n//      ex: time line do FB, cada um dos posts é um componente. ex: App, sempre maiúsculo\n//      um componente por arquivo, sempre que usar html dentro do JS importar o react\n//      componente é um bloco isolado de HTML, CSS e JS, o qual não interfe no resto da aplicação\n// Estado: Informações mantidas pela componente (Lembrar: imutabilidade)\n// Propriedade: informações que um componente PAI passa para o componente FILHO\n//      não precisa ser apenas string, pode ser variável, func ...(objetos ?)\n//import Header from './Header';\n\nfunction App3() {\n  //html dentro do javaScript\n  const [counter, setCounter] = useState(1); //pode ser var\n\n  function incrementCounter() {\n    //como é uma funcao do componente, fica dentro do mesmo\n    setCounter(counter + 1);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }\n  }, \"Contador: \", counter), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 6\n    }\n  }, \"Incrementar\")) //por critérios de organização, div pode ser apagado\n  ;\n}\n\nfunction App2() {\n  const [counter, setCounter] = useState(100);\n\n  function incrementCounter() {\n    setCounter(counter + 1);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, \" Contador: \", counter), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: incrementCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, \"IncreaseHealthe\"));\n}\n\nexport default App3;","map":{"version":3,"sources":["C:/Códigos/siteHealth2/web/src/App.js"],"names":["React","useState","App3","counter","setCounter","incrementCounter","App2"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;;AAEA,SAASC,IAAT,GAAgB;AAAO;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,CAAD,CAAtC,CADc,CAC6B;;AAE3C,WAASI,gBAAT,GAA2B;AAAC;AAEzBD,IAAAA,UAAU,CAACD,OAAO,GAAE,CAAV,CAAV;AAEF;;AAED,sBACA,uDACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAeA,OAAf,CADH,eAEG;AAAQ,IAAA,OAAO,EAAIE,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFH,CADA,CAMA;AANA;AASD;;AACD,SAASC,IAAT,GAAgB;AACd,QAAM,CAACH,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,GAAD,CAAtC;;AAGA,WAASI,gBAAT,GAA2B;AACzBD,IAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AAED;;AACD,sBACE,uDACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgBA,OAAhB,CADA,eAEA;AAAQ,IAAA,OAAO,EAAIE,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,CADF;AAOD;;AACD,eAAeH,IAAf","sourcesContent":["import React, { useState } from 'react';\n//import './App.css';\n\n// Componente: função que retorna um html,css ou JS. Não afeta o layout, nem os anuncios, nem o chat.\n//      ex: time line do FB, cada um dos posts é um componente. ex: App, sempre maiúsculo\n//      um componente por arquivo, sempre que usar html dentro do JS importar o react\n//      componente é um bloco isolado de HTML, CSS e JS, o qual não interfe no resto da aplicação\n\n// Estado: Informações mantidas pela componente (Lembrar: imutabilidade)\n\n// Propriedade: informações que um componente PAI passa para o componente FILHO\n//      não precisa ser apenas string, pode ser variável, func ...(objetos ?)\n\n//import Header from './Header';\n\nfunction App3() {      //html dentro do javaScript\n  const [counter, setCounter] = useState(1); //pode ser var\n\n  function incrementCounter(){//como é uma funcao do componente, fica dentro do mesmo\n  \n     setCounter(counter +1);\n     \n  }\n  \n  return (\n  <>\n     <h1>Contador: {counter}</h1>\n     <button onClick = {incrementCounter} >Incrementar</button>\n\n    </>\n  //por critérios de organização, div pode ser apagado\n  );\n  \n}\nfunction App2() {\n  const [counter, setCounter] = useState(100);\n  \n  \n  function incrementCounter(){\n    setCounter(counter+1);\n\n  }\n  return (\n    <>\n    <h1> Contador: {counter}</h1>\n    <button onClick = {incrementCounter}>IncreaseHealthe</button>\n   \n   </>\n  );\n}\nexport default App3;\n"]},"metadata":{},"sourceType":"module"}